-- Database Schema
CREATE TABLE exchange_data (user_id NUMBER, stock_id VARCHAR2(50), stock_name VARCHAR2(100), stock_count NUMBER, processed_date DATE DEFAULT SYSDATE);
CREATE TABLE depository_data (user_id NUMBER, stock_id VARCHAR2(50), stock_name VARCHAR2(100), stock_count NUMBER, processed_date DATE DEFAULT SYSDATE);
CREATE TABLE mismatch_log (log_id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, user_id NUMBER, stock_id VARCHAR2(50), exchange_count NUMBER, depository_count NUMBER, processed_date DATE DEFAULT SYSDATE, remarks VARCHAR2(255));

-- PL/SQL Package Specification
CREATE OR REPLACE PACKAGE stock_comparison_pkg AS
    PROCEDURE load_csv(file_path IN VARCHAR2, table_name IN VARCHAR2);
    PROCEDURE compare_data;
END stock_comparison_pkg;

-- PL/SQL Package Body
CREATE OR REPLACE PACKAGE BODY stock_comparison_pkg AS
    PROCEDURE load_csv(file_path IN VARCHAR2, table_name IN VARCHAR2) IS
        l_line VARCHAR2(4000); l_file UTL_FILE.FILE_TYPE;
        v_user_id NUMBER; v_stock_id VARCHAR2(50); v_stock_name VARCHAR2(100); v_stock_count NUMBER;
    BEGIN
        l_file := UTL_FILE.FOPEN('CSV_DIR', file_path, 'R');
        UTL_FILE.GET_LINE(l_file, l_line); -- Skip header
        LOOP
            BEGIN
                UTL_FILE.GET_LINE(l_file, l_line);
                v_user_id := TO_NUMBER(REGEXP_SUBSTR(l_line, '[^,]+', 1, 1));
                v_stock_id := REGEXP_SUBSTR(l_line, '[^,]+', 1, 2);
                v_stock_name := REGEXP_SUBSTR(l_line, '[^,]+', 1, 3);
                v_stock_count := TO_NUMBER(REGEXP_SUBSTR(l_line, '[^,]+', 1, 4));
                IF table_name = 'exchange_data' THEN
                    INSERT INTO exchange_data VALUES (v_user_id, v_stock_id, v_stock_name, v_stock_count, SYSDATE);
                ELSE
                    INSERT INTO depository_data VALUES (v_user_id, v_stock_id, v_stock_name, v_stock_count, SYSDATE);
                END IF;
            EXCEPTION
                WHEN NO_DATA_FOUND THEN EXIT;
                WHEN OTHERS THEN DBMS_OUTPUT.PUT_LINE('Error: ' || l_line);
            END;
        END LOOP;
        UTL_FILE.FCLOSE(l_file);
    END load_csv;

    PROCEDURE compare_data IS
    BEGIN
        FOR mismatch IN (
            SELECT e.user_id, e.stock_id, e.stock_count AS exchange_count, d.stock_count AS depository_count
            FROM exchange_data e FULL OUTER JOIN depository_data d ON e.user_id = d.user_id AND e.stock_id = d.stock_id
            WHERE NVL(e.stock_count, 0) != NVL(d.stock_count, 0)
        ) LOOP
            INSERT INTO mismatch_log (user_id, stock_id, exchange_count, depository_count, remarks)
            VALUES (mismatch.user_id, mismatch.stock_id, mismatch.exchange_count, mismatch.depository_count, 'Mismatch found');
        END LOOP;
    END compare_data;
END stock_comparison_pkg;

-- Directory Setup
CREATE OR REPLACE DIRECTORY CSV_DIR AS '/path/to/csv/files';
GRANT READ, WRITE ON DIRECTORY CSV_DIR TO PUBLIC;

-- Usage Example
BEGIN
    stock_comparison_pkg.load_csv('exchange_data.csv', 'exchange_data');
    stock_comparison_pkg.load_csv('depository_data.csv', 'depository_data');
    stock_comparison_pkg.compare_data;
END;
